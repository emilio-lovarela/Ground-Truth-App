<LinePlay>:
	image_car: image1
	slider_max: slimax
	anla_ya: anlaya
	orientation: 'tb-rl'

    canvas:
        Color:
            rgba: 0, 0, 0, 1

        Rectangle:
        	size: self.size
        	pos: self.pos

    AnchorLayout:
    	id: anlaya
		size_hint: .7, 1
        pos: self.pos
	    
	    Image:
	    	id: image1
	    	source: root.img
	    	size_hint: None, None
	    	size: 522, 962
	    	allow_stretch: True
        	keep_ratio: True

	    	canvas.after:
		        Color:
        			rgba: 1, 1, 1, root.alpha_controlline
		        Line:
		            points: root.points
		            close: root.close

    BoxLayout:
    	orientation: 'vertical'
		size_hint: .3, 1
	    pos: self.pos
		
		BoxLayout:
			size_hint: 1, .2
		    pos: self.pos
		
			Label:
				text: root.img[root.img.find("\\") + 1:]
				valign: "top"
				halign: "center"
				font_size: 30
				color: 1,0,1,1

		RelativeLayout:
			size_hint: 1, .1
		    pos: self.pos
		
			PopupButton:
				text: 'Select Folder'
				size_hint: .8, 1
				pos_hint: {'center_x': .58, 'center_y': .55}
				font_size: 30
				color: 1,1,0,1
				on_press: self.fire_popup(root.obj)

	    GridLayout:
	    	orientation: 'vertical'
	    	cols: 2
			size_hint: 1, 1
		    pos: self.pos
		
			Label:
				text: 'Change Image'

		    Slider:
		    	id: slimax
		    	# Reiniciate all to default
		    	value: 0
		    	on_value: root.changeimage(self.value)
		    	on_value: root.points = []
	            on_value: root.lpoints = []
	            on_value: root.final_points = []
	            on_value: root.final_lpoints = []
	            on_value: root.canvas.remove_group('Lines')
	            on_value: root.tex_control = ""
	            on_value: Tog.state = 'normal'
	            on_value: root.ori_size = image1.size
	            on_value: anlaya.do_layout()
		    	min: 0
		    	max: root.LImages
		    	step: 1

		    Label:
	            text: 'Opacity Control Line'

	        Slider:
	            value: root.alpha_controlline
	            on_value: root.alpha_controlline = float(args[1])
	            min: 0.
	            max: 1.

	        ToggleButton:
	        	id: Tog
	        	size_hint: 1, 1
	            text: 'Close line'
	            on_press: root.close = self.state == 'down'

	        Button:
	            size_hint: 1, 1
	            text: 'Clear'
	            on_press: root.points = []
	            on_press: root.lpoints = []

	    	Button:
	    		size_hint: 1, 1
	            text: 'Clear all'
	            on_press: root.final_points = []
	            on_press: root.final_lpoints = []
	            on_press: root.canvas.remove_group('Lines')
	            on_press: root.points = []
	            on_press: root.lpoints = []

	        Button:
	        	size_hint: 1, 1
	            text: 'Save mask'
	            disabled: root.disa
	            on_press: root.save_image()
	            on_press: root.tex_control = "Image saved!"

	        Label:
	        	text: root.tex_control
	        	font_size: 20
				color: 1,0,1,1

			Button:
				size_hint: 1, 1
	            text: 'New contour'
	            on_press: root.new_line()
	            on_press: Tog.state = 'normal'