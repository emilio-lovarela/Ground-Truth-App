<MFileChooser>:
	filecho: FileCho
	id:pop
	size_hint: .8, .8
    # auto_dismiss: False
    title: FileCho.path

	BoxLayout:
		orientation: 'vertical'
		rows: 3
	
		Label:
			size_hint: 1, .2
			text: "Select images folder"
			valign: "top"
			halign: "center"
			font_size: 30
			color: 1,0,1,1

	    FileChooserIconView:
	    	id: FileCho
	    	size_hint: 1, 1
	        filters: ["*.png", "*.jpg", "*.jpeg", '*.jfif', "*.tiff", "*.tif", "*.BMP", "*.bmp", "*.nii", "*.nii.gz", "*.zip"]
		    path: root.RootPath
		    on_submit: root.dismiss_popup_volume()

	    RelativeLayout:
	    	size_hint: 1, .2
	    	orientation: 'horizontal'

	    	Button:
	    		size_hint: 0.3, .5
	    		pos_hint: {'center_x': .8, 'center_y': .5}
	    		text: "Select current folder"
	    		color: 1,1,0,1
	    		disabled: False if ([True for file in FileCho.files if file.lower().endswith(('.png', '.jpg', '.jpeg', "*.tiff", "*.BMP")) == True]) else True
	    		on_press: root.dismiss_popup_images()

	    	Button:
	    		text: "Set Folder as Root"
	    		size_hint: 0.25, .5
	    		pos_hint: {'center_x': .15, 'center_y': .5}
	    		on_press: root.path_exist(FileCho.path)

	    	Button:
	    		text: "Default Root"
	    		size_hint: 0.18, .5
	    		pos_hint: {'center_x': .38, 'center_y': .5}
	    		on_press: root.path_exist("/")

	    	Label:
	    		text: root.Invalid_Path
	    		bold: True
	    		size_hint: 0.3, .5
	    		pos_hint: {'center_x': .56, 'center_y': .55}
	    		color: 1,0,0,1

<ChangeClass>:
	remover: remover
	normaler: normaler
	id: general
	background_color: (0, 0, 0, 0.1)
	size_hint: .3,.8
	pos_hint: {'center_x': .15, 'center_y': .5}
	title: "Select Class"
	title_align: "center"
	title_size: 30
	title_color: [0,1,0,1]

	BoxLayout:
		orientation: 'vertical'

		Label:
			size_hint: 1, .15
			text: root.class_name
			halign: "center"
			valign: "top"
			font_size: 18
			color: tuple(root.class_color)

		ScrollView:
		    do_scroll_x: False
		    bar_width: 3
            effect_cls: "ScrollEffect"

			StackLayout:
				orientation: 'lr-tb'
				spacing: [30,10]
				size_hint_y: None
				height: self.minimum_height
				id:grid

		Label:
			size_hint: 1, .1
			text: root.advice
			text_size: self.size
			valign: "middle"
			font_size: 20
			color: 1,0,0,1

		Label:
			markup: True
			size_hint: 1, .1
			text: "[color=#ff4000]Class filter: [/color]" + root.keycode
			text_size: self.size
			valign: "middle"
			font_size: 18
			color: 1,0,1,1

		RelativeLayout:
	    	size_hint: 1, .2
	    	orientation: 'horizontal'

	    	Button:
	    		id: aply
	    		size_hint: 0.34, .5
	    		pos_hint: {'center_x': .16, 'center_y': .5}
	    		text: "New Class"
	    		color: 0,1,0,1
	    		on_press: root.new_class()

	    	ToggleButton:
	    		id: normaler
	    		allow_no_selection: False
	    		group: "mode"
	    		size_hint: 0.1, .5
	    		pos_hint: {'center_x': .405, 'center_y': .5}
	    		text: "N"
	    		color: 0,1,0,1
	    		state: "down"
	    		on_press: root.mode = "normal"
	    		on_press: load.disabled = False
	    		on_press: self.color = 0,1,0,1
	    		on_press: aply.text = "New Class"
	    		on_press: aply.color = 0,1,0,1
	    		on_press: general.background_color = (0, 0, 0, 0.1)
	    		on_press: general.auto_dismiss = True
	    		on_press: root.block = False
	    		on_press: root.advice = ""
	    		on_state: self.color = 1,1,1,1

	    	ToggleButton:
	    		allow_no_selection: False
	    		group: "mode"
	    		size_hint: 0.1, .5
	    		pos_hint: {'center_x': .5, 'center_y': .5}
	    		text: "E"
	    		color: 1,1,1,1
	    		on_press: root.mode = "edit"
	    		on_press: load.disabled = True
	    		on_press: self.color = 1,1,0,1
	    		on_press: aply.text = "Edit Class"
	    		on_press: aply.color = 1,1,0,1
	    		on_press: general.background_color = (1, 1, 0, 0.2)
	    		on_press: general.auto_dismiss = False
	    		on_press: root.advice = ""
	    		on_state: self.color = 1,1,1,1

	    	ToggleButton:
	    		allow_no_selection: False
	    		id: remover
	    		group: "mode"
	    		size_hint: 0.1, .5
	    		pos_hint: {'center_x': .595, 'center_y': .5}
	    		text: "R"
	    		color: 1,1,1,1
	    		on_press: root.mode = "remove"
	    		on_press: load.disabled = True
	    		on_press: self.color = 1,0,0,1
	    		on_press: aply.text = "Del Class"
	    		on_press: aply.color = 1,0,0,1
	    		on_press: general.background_color = (1, 0, 0, 0.2)
	    		on_press: general.auto_dismiss = False
	    		on_press: root.block = False
	    		on_press: root.advice = ""
	    		on_press: root.current_class = ""
	    		on_press: root.class_name = ""
	    		on_state: self.color = 1,1,1,1

	    	Button:
	    		id:load
	    		size_hint: 0.34, .5
	    		pos_hint: {'center_x': .84, 'center_y': .5}
	    		text: "Load CSV"
	    		color: 1,1,0,1
	    		on_press: root.load_class.bind(on_dismiss=root.update_classes)
	    		on_press: root.load_class.open()

<Loadcsv>:
	size_hint: .8, .8
    # auto_dismiss: False
    title: Choser.path

	BoxLayout:
		orientation: 'vertical'
		rows: 3
	
		Label:
			size_hint: 1, .2
			text: "Select CSV File"
			valign: "top"
			halign: "center"
			font_size: 30
			color: 1,0,1,1

	    FileChooserIconView:
	    	id: Choser
	    	size_hint: 1, 1
	        filters: ["*.txt"]
		    path: root.RootPath
		    on_submit: root.dismiss_file(self.selection[0])

<Options>:
	size_hint: .8, .8
	title: "Options Menu"
	title_align: "center"
	title_size: 30
	title_color: [0,1,0,1]

	BoxLayout:
		size: self.size
		orientation: 'vertical'
		cols: 4

		BoxLayout:
			size_hint: 1, .05
			orientation: 'vertical'

		GridLayout:
			size_hint: .8, .1
			pos_hint: {'center_x': .5, 'center_y': .5}
			orientation: 'vertical'
			cols: 4

			ToggleButton:
				allow_no_selection: False
				group: "mode_op"
	    		size_hint: 1, 1
	    		text: "Clasification"
	    		halign: 'center'
	    		valign: 'middle'
	    		on_press: root.change_description("Clasification")

	    	ToggleButton:
	    		allow_no_selection: False
				group: "mode_op"
	    		size_hint: 1, 1
	    		text: "Object\nDetection"
	    		halign: 'center'
	    		valign: 'middle'
	    		on_press: root.change_description("Bounding_boxes")

	    	ToggleButton:
	    		allow_no_selection: False
				group: "mode_op"
	    		size_hint: 1, 1
	    		state: "down"
	    		text: "Semantic\nSegmentation"
	    		halign: 'center'
	    		valign: 'middle'
	    		on_press: root.change_description("Segmentation")

	    	ToggleButton:
	    		allow_no_selection: False
				group: "mode_op"
	    		size_hint: 1, 1
	    		text: "Instance\nSegmentation"
	    		halign: 'center'
	    		valign: 'middle'
	    		on_press: root.change_description("Instance")

	    BoxLayout:
	    	size_hint: .8, .7
			pos_hint: {'center_x': .5, 'center_y': .5}

	    	Label:
	    		text: root.description
	    		padding: 0, 20
	    		font_size: 17
	    		text_size: self.size
	    		valign: "top"
				halign: "left"

	    RelativeLayout:
	    	size_hint: 1, .1

	    	RelativeLayout:
	    		size_hint: .2, 1
	    		pos_hint: {'center_x': .1, 'center_y': .5}

		    	Label:
		    		text: "Active Caption"
		    		font_size: 17
		    		text_size: self.size
		    		padding: 20,0
		    		valign: "middle"
					halign: "left"

		    	CheckBox:
		    		pos_hint: {'center_x': .82, 'center_y': .49}

		    Button
		    	size_hint: 0.15, .7
	    		pos_hint: {'center_x': .85, 'center_y': .6}
	    		text: "Select mode"
	    		color: 1,1,0,1
	    		on_press: root.dismiss()